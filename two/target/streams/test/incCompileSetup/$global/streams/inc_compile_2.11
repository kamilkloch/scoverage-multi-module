format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /home/kamilk/github/scoverage-multi-module/two/target/scala-2.11/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.11.6
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
3 items
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> /home/kamilk/github/scoverage-multi-module/two/target/scala-2.11/test-classes/Two/TestTwo$$anonfun$1.class
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> /home/kamilk/github/scoverage-multi-module/two/target/scala-2.11/test-classes/Two/TestTwo$$anonfun$2.class
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> /home/kamilk/github/scoverage-multi-module/two/target/scala-2.11/test-classes/Two/TestTwo.class
binary dependencies:
3 items
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> /home/kamilk/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.6.jar
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> /home/kamilk/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.4.jar
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> /usr/lib/jvm/java-8-oracle/jre/lib/rt.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
2 items
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> One.One
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> Two.Two
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
3 items
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> Two.TestTwo
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> Two.TestTwo$$anonfun$1
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> Two.TestTwo$$anonfun$2
used names:
21 items
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> $org_scalatest_assert_macro_expr
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> $org_scalatest_assert_macro_left
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> $org_scalatest_assert_macro_right
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> <init>
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> ==
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> Bool
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> FunSuite
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> One
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> TestTwo
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> Two
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> assert
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> assertionsHelper
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> binaryMacroBool
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> foo
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> macroAssert
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> one
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> org
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> scalactic
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> scalatest
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> test
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> two
product stamps:
3 items
/home/kamilk/github/scoverage-multi-module/two/target/scala-2.11/test-classes/Two/TestTwo$$anonfun$1.class -> lastModified(1430237115000)
/home/kamilk/github/scoverage-multi-module/two/target/scala-2.11/test-classes/Two/TestTwo$$anonfun$2.class -> lastModified(1430237115000)
/home/kamilk/github/scoverage-multi-module/two/target/scala-2.11/test-classes/Two/TestTwo.class -> lastModified(1430237115000)
source stamps:
1 items
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> hash(1832e4ed1985a30373f857c00fb41e5f190df346)
binary stamps:
3 items
/home/kamilk/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.6.jar -> lastModified(1424912463000)
/home/kamilk/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.4.jar -> lastModified(1422515758000)
/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar -> lastModified(1429101484000)
class names:
3 items
/home/kamilk/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.6.jar -> scala.Predef$
/home/kamilk/.ivy2/cache/org.scalatest/scalatest_2.11/bundles/scalatest_2.11-2.2.4.jar -> org.scalatest.FunSuite
/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar -> java.lang.String
internal apis:
1 items
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> 

external apis:
2 items
One.One -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHAH2d/4AHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAFnNyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cAsAM2l0AAZub3RpZnlzcQB+AAxaVGpddAADT25lc3EAfgAMj1WJe3QABHdhaXRzcQB+AAxCi2qydAANJGFzSW5zdGFuY2VPZnNxAH4ADCIoLkp0AAZlcXVhbHNzcQB+AAxHvBq3dAAMYXNJbnN0YW5jZU9mc3EAfgAMfNbEVHQADHN5bmNocm9uaXplZHNxAH4ADKGl9mh0AA0kaXNJbnN0YW5jZU9mc3EAfgAMSd6T/nQACW5vdGlmeUFsbHNxAH4ADJjO36x0AAxpc0luc3RhbmNlT2ZzcQB+AAxoQeS4dAAGPGluaXQ+c3EAfgAMEKrBgnQAAj09c3EAfgAMEWVEWHQABWNsb25lc3EAfgAM9fKf4XQACHRvU3RyaW5nc3EAfgAMEXcZtXQAAiE9c3EAfgAMV6wVDnQACGdldENsYXNzc3EAfgAMrmrIZXQAAm5lc3EAfgAMUdLcSHQAAmVxc3EAfgAMlBQFrXQAAiMjc3EAfgAMNuebjHQACGZpbmFsaXplc3EAfgAMvwKJhnQACGhhc2hDb2Rlc3EAfgAMxvas9XQAA2Zvb3NyABN4c2J0aS5hcGkuU291cmNlQVBJuV6n+SkjOKQCAAJbAAtkZWZpbml0aW9uc3QAF1tMeHNidGkvYXBpL0RlZmluaXRpb247WwAIcGFja2FnZXN0ABRbTHhzYnRpL2FwaS9QYWNrYWdlO3hwdXIAF1tMeHNidGkuYXBpLkRlZmluaXRpb247iMlc57TjXg4CAAB4cAAAAAFzcgATeHNidGkuYXBpLkNsYXNzTGlrZYM0HKHfsJdsAgAETAAOZGVmaW5pdGlvblR5cGV0ABpMeHNidGkvYXBpL0RlZmluaXRpb25UeXBlO1sAEHNhdmVkQW5ub3RhdGlvbnN0ABNbTGphdmEvbGFuZy9TdHJpbmc7TAAIc2VsZlR5cGV0ABBMeHNidGkvYXBpL0xhenk7TAAJc3RydWN0dXJlcQB+AEN4cgAheHNidGkuYXBpLlBhcmFtZXRlcml6ZWREZWZpbml0aW9u+RFusdVQPOICAAFbAA50eXBlUGFyYW1ldGVyc3QAGltMeHNidGkvYXBpL1R5cGVQYXJhbWV0ZXI7eHIAFHhzYnRpLmFwaS5EZWZpbml0aW9uhyob6HFC40YCAARMAAZhY2Nlc3N0ABJMeHNidGkvYXBpL0FjY2VzcztbAAthbm5vdGF0aW9uc3QAF1tMeHNidGkvYXBpL0Fubm90YXRpb247TAAJbW9kaWZpZXJzdAAVTHhzYnRpL2FwaS9Nb2RpZmllcnM7TAAEbmFtZXEAfgANeHBzcgAQeHNidGkuYXBpLlB1YmxpY7pYPa5sLWBCAgAAeHIAEHhzYnRpLmFwaS5BY2Nlc3PdYpr4HWMxSAIAAHhwdXIAF1tMeHNidGkuYXBpLkFubm90YXRpb24765frGRD2jUgCAAB4cAAAAABzcgATeHNidGkuYXBpLk1vZGlmaWVyc8cREyFpnNwkAgABQgAFZmxhZ3N4cAB0AAdPbmUuT25ldXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAAAc3IAE3hzYnRpLlNhZmVMYXp5JEltcGxQAi6Tl5dAPwIAA1oACGJpdG1hcCQwTAACX3R0ABJMamF2YS9sYW5nL09iamVjdDtMAARldmFsdAARTHNjYWxhL0Z1bmN0aW9uMDt4cgAWeHNidGkuYXBpLkFic3RyYWN0TGF6edN3tQFfu+egAgAAeHAAcHNyACB4c2J0aS5TYWZlTGF6eSQkYW5vbmZ1biRzdHJpY3QkMQAAAAAAAAAAAgABTAAHdmFsdWUkMXEAfgBceHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBbAXNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBDTAAJaW5oZXJpdGVkcQB+AENMAAdwYXJlbnRzcQB+AEN4cQB+AGRzcQB+AFsBdXEAfgA+AAAAAHBzcQB+AFsBdXEAfgA+AAAAAHBzcQB+AFsBdXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBjdAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBjc3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgB8dAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgB9c3EAfgBwdAADQW55c3EAfgB0c3EAfgB3dXEAfgB6AAAAAnNxAH4AfHQABXNjYWxhcQB+AINwcHVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAA09uZXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABTQDGYGd1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5cQB+AA1MAA9zb3VyY2VEaXJlY3RvcnlxAH4ADXhwdABIL2hvbWUva2FtaWxrL2dpdGh1Yi9zY292ZXJhZ2UtbXVsdGktbW9kdWxlL29uZS90YXJnZXQvc2NhbGEtMi4xMS9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUkrdf6osjCML044J6afeD6chG5DQ=
Two.Two -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlFlpwRASfbtoCAAZJAAdhcGlIYXNoWgAIaGFzTWFjcm9MABhfaW50ZXJuYWxPbmx5X25hbWVIYXNoZXN0ACRMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2hlcztMAANhcGl0ABVMeHNidGkvYXBpL1NvdXJjZUFQSTtMAAtjb21waWxhdGlvbnQAF0x4c2J0aS9hcGkvQ29tcGlsYXRpb247WwAEaGFzaHQAAltCeHBX3DIuAHNyACJ4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaGVzVNq+mfrU7EwCAAJbAA9pbXBsaWNpdE1lbWJlcnN0ACNbTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoO1sADnJlZ3VsYXJNZW1iZXJzcQB+AAd4cHVyACNbTHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoO0lagLbdlov0AgAAeHAAAAAAdXEAfgAJAAAAF3NyACB4c2J0aS5hcGkuX2ludGVybmFsT25seV9OYW1lSGFzaFsO9SJ2OFfPAgACSQAEaGFzaEwABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cKfA87J0AAZub3RpZnlzcQB+AAyzHLrZdAAEd2FpdHNxAH4ADJEkMrx0AA0kYXNJbnN0YW5jZU9mc3EAfgAMk/FD9XQABmVxdWFsc3NxAH4ADGXt3vR0AAxhc0luc3RhbmNlT2ZzcQB+AAyYfs+NdAAMc3luY2hyb25pemVkc3EAfgAM3ggRAXQADSRpc0luc3RhbmNlT2ZzcQB+AAxY/Wr2dAAJbm90aWZ5QWxsc3EAfgAM/KN9gXQADGlzSW5zdGFuY2VPZnNxAH4ADBYQ3yd0AAY8aW5pdD5zcQB+AAxzI6KKdAACPT1zcQB+AAy2lEWNdAAFY2xvbmVzcQB+AAz2pD2edAADYmFyc3EAfgAMfSKXCHQACHRvU3RyaW5nc3EAfgAMFchEd3QAA1R3b3NxAH4ADGzzguZ0AAIhPXNxAH4ADNVoERB0AAhnZXRDbGFzc3NxAH4ADNNeMU50AAJuZXNxAH4ADGCyeep0AAJlcXNxAH4ADBIgUGJ0AAIjI3NxAH4ADB/Mhq50AAhmaW5hbGl6ZXNxAH4ADMdplMN0AAhoYXNoQ29kZXNxAH4ADPuyPOt0AANmb29zcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBFeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnPHERMhaZzcJAIAAUIABWZsYWdzeHAAdAAHVHdvLlR3b3VyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAHNyABN4c2J0aS5TYWZlTGF6eSRJbXBsUAIuk5eXQD8CAANaAAhiaXRtYXAkMEwAAl90dAASTGphdmEvbGFuZy9PYmplY3Q7TAAEZXZhbHQAEUxzY2FsYS9GdW5jdGlvbjA7eHIAFnhzYnRpLmFwaS5BYnN0cmFjdExhennTd7UBX7vnoAIAAHhwAHBzcgAgeHNidGkuU2FmZUxhenkkJGFub25mdW4kc3RyaWN0JDEAAAAAAAAAAAIAAUwAB3ZhbHVlJDFxAH4AXnhwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AXQFzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4ARUwACWluaGVyaXRlZHEAfgBFTAAHcGFyZW50c3EAfgBFeHEAfgBmc3EAfgBdAXVxAH4AQAAAAABwc3EAfgBdAXVxAH4AQAAAAABwc3EAfgBdAXVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAADc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AZXQAA09uZXNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AZXNyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAADT25lc3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AH9zcQB+AHJ0AAZPYmplY3RzcQB+AHZzcQB+AHl1cQB+AHwAAAADc3EAfgB+dAAEamF2YXNxAH4AfnQABGxhbmdxAH4Ag3NxAH4AcnQAA0FueXNxAH4AdnNxAH4AeXVxAH4AfAAAAAJzcQB+AH50AAVzY2FsYXEAfgCDcHB1cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAAXNyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0AANUd29zcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAU0Axmy9dXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQASC9ob21lL2thbWlsay9naXRodWIvc2NvdmVyYWdlLW11bHRpLW1vZHVsZS90d28vdGFyZ2V0L3NjYWxhLTIuMTEvY2xhc3Nlc3QAAS91cgACW0Ks8xf4BghU4AIAAHhwAAAAFEetwJBD8VV+ALzfv33M2R0ykKaM
source infos:
1 items
/home/kamilk/github/scoverage-multi-module/two/src/test/scala/TestTwo.scala -> 
AAAAAAAAAAA=
compilations:
1 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABTQDGb/l1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQATS9ob21lL2thbWlsay9naXRodWIvc2NvdmVyYWdlLW11bHRpLW1vZHVsZS90d28vdGFyZ2V0L3NjYWxhLTIuMTEvdGVzdC1jbGFzc2VzdAABLw==
